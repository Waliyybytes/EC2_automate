# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
    aws-cli: circleci/aws-cli@2.0.3
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
   # Exercise - Rollback
  destroy_environment:
    steps:
     - run:
        name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
        when: on_fail
        command: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  # create_infrastructure:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker: 
  #     - image: amazon/aws-cli
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: Create Cloudformation Stack
  #         command: aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1
  #     - run: return 1
  #     - destroy_environment
    # configure_infrastructure:    
    #   docker:
    #     - image: python:3.7-alpine3.11
    #   steps:
    #     - checkout
    #     - add_ssh_keys:
    #         fingerprints: [53:ac:a9:3c:94:d9:54:5e:a4:13:9c:05:d6:6b:75:5e]
    #     - run: 
    #         name: install dependencies
    #         command: |
    #           apk add --update ansible
    #     - run: 
    #         name: configure server
    #         command: |
    #           ansible-playbook -i inventory.txt main.yml

    # # Exercise: Smoke Testing
    #   smoke_test:
    #     docker:
    #       - image: alpine:latest
    #     steps:
    #       - run: apk add --update curl
    #       - run:
    #           name: smoke test
    #           command: |
    #             URL="https://blog.udacity.com/"
    #             # Test if website exists
    #             if curl -s --head ${URL} 
    #             then
    #               return 0
    #             else
    #               return 1
    #               fi
  
  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: simulate error
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  create_configure-infra-workflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure
        - create_infrastructure
        - smoke_test
              # requires:
              #   - create_infrastructure
            
      
